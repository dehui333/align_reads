#include <gtest/gtest.h>

#include "bioparser/fasta_parser.hpp"
#include "bioparser/fastq_parser.hpp"
#include "bioparser/paf_parser.hpp"
#include "types.hpp"

const char* reads_fastq_path = "../test_data/reads.fastq";
const char* reads_fasta_path = "../test_data/reads.fasta";
const char* overlap_paf_path = "../test_data/overlap.paf";

// Demonstrate some basic assertions.
TEST(TrivialTests, BasicAssertions) {
    // Expect two strings not to be equal.
    EXPECT_STRNE("hello", "world");
    // Expect equality.
    EXPECT_EQ(7 * 6, 42);
}

TEST(BasicTests, Parse_Fasta) {
    auto p = bioparser::Parser<align_reads::Sequence>::Create<bioparser::FastaParser>(reads_fasta_path);
    auto s = p->Parse(-1);
    EXPECT_EQ(2, s.size());
    uint32_t last = s.size() - 1;
    EXPECT_EQ(s[0]->name, "read1");
    EXPECT_EQ(s[0]->seq, "ACTGACTGACTGACTGACTGACTGACTGACTGACTGACTGACTGACTGACTGACTGACTGACTGACTGACTGACTGACTGACTGACTGACTGACTGACTGACTGACTGACTGACTGACTGACTGACTGACTGACTGACTGACTGACTGACTGACTGACTGACTGACTGACTGACTGACTGACTGACTGACTGACTGACTGACTGACTGACTGACTGACTGACTGACTGACTGACTGACTG");
    EXPECT_EQ(s[last]->name, "read2");
    EXPECT_EQ(s[last]->seq, "ACTGACTGACTGACTGACTGACTGACTGACTGACTGACTGACTGACTGACTGACTGACTGACTGACTGACTGACTGACTGACTG");
}

TEST(BasicTests, Parse_Fastq) {
    auto p = bioparser::Parser<align_reads::QSequence>::Create<bioparser::FastqParser>(reads_fastq_path);
    auto s = p->Parse(-1);
    EXPECT_EQ(3165, s.size());
    uint32_t last = s.size() - 1;
    EXPECT_EQ(s[0]->name, "49e202ae-bf1a-4a18-8590-3a3620b1b257");
    EXPECT_EQ(s[0]->seq, "GTAGCCGCTTCGTTCAGTTGCGTATTGCTGCCACCGGCAGCACTTCAACTTGGCCCACCAGCACAAACAGCACAAAGCCCGGCAGCAACATTGCGGCACAGCAGAACAGCCCTCAAGTTCAAGGCGGCTATCGTTAATCAGATGTTTTATATCCCCGCACCAGTTCAACTTGTTCCTGCTGCTTCTCCTGTTGGCCAGCAGAGTCCGTGCTGCCAGCAAGCTGGCCACTCGGAGCAACAAAACATCGGGCTCATCGGCATCGGGAGTCGGAGCCGGAACAGCAGCAGCTTCGGCAGCGGCGGCGGCAGCGTCAGGAACACCCATTTTGGGATCATGCCATCGATTTGAATGACGATTTTCGCATACTATGGCAAATCGGTAATCAGGATATAACATTTGAAATACAGGCACGTACCCTGGGCTACGTCGGGTTCGGATTCTCGCCCGATGGCAATCTGGCTGATGCCGATATGGCCATCGGCTGGGTGAACAAGGGTCAAACCCTATTTTCAGGCCGAAGTGAAGCGCAAAATAAAACCCAGCACAAAGAAAGTTTTTGAGGGTGGGGTTTGGGCTGAATACCCGTAGATGGGGCTTCTGCTGGGCGCTAACGATTTTCATTCCCCGCAGAACGTTTCATTTTTCCAATGCGTGTGGACGAAAATTAAGGGCGGTCAGGCCGGCCGGCCAACTAAATGAAAAGTTGTCGCCCTAATATCGTAATTTATTCTGCTCATGGGCCTGCCGGAGTGGCCCAAGGAGCAGCGACCTCAGTGCCGCCGGAGCAATTGGTGCGTACATGGTGCTGGTACGCTGCTGGCAATCTGGAGATATTCAGCGAAAACTGCGTCAGAATGAACCTGGATTTGCCCGACTGGACACTGGAGCTGGTGGCAACCAACGATACGAGACGATGTGATTTGGTGGGTAAAAGTCAAGGATATGGTTTATAAGTTGCAAAAATAATGCGCATGTTCTTAACAGTTCCTGCAGAAGCACGCGATCCTGTTGGATGCAGCTGCTCTGGCAGCCATACTGACACTTCTCCCTGCTGCCCTTTCCGGAAATGCTCTACATGCAGGCCAGATAGCCAATCTCTCGGTGAGTACTTTCTTATGCTTGTTTTCCCAGCACCAGTAACAACTGAAATCCTGTCCAGACCACGGTGTTCCCGCAAGCCTTTCAGGAGGGACGGCGTCTATTCGCCTCCTCACACCAAACAGCGGAGGATGGACCTGCGCCGCGGCAGTTCCGTGAGATGTACAAAAAGAAACTGCAGATCAAGCGGAGCAATACGTA");
    EXPECT_EQ(s[0]->qual, "-0201////13655?1//522.,+,,//.-.50//)))'&'&&)*+-****+//37;=?@@AABBABCB?@?=>>==<B@====:::984321126788646544///.33)).4411221-**,--0115>???@@DD766679==5<><<;/,&()&))'%%%*.11111@?BBCDC?;:===>>-++.@C<;:111(''''02459;<=<<555555799:<<87786811222777837=<:,''''((((-**(')++**+32.0..../9887,)(''('&'((+444214332./?87:66767<+++*+6222//2;<).3979BAA@>?>>?>???@?AADDDCA@@ACCG?A<<544****+55678,''''+112;;?DDC>>5554/556====4447<;<<>=;:=7774/.---21125>.......CAA@;;<A66666=@>>@C@@@?>==633333<<==??><<<=?<;;.-,*)()+,00/+*+'',16@=?1-,('%%$%&'*****,,-0446<:::3547899:=*)022249;<;><99(')-013751/..++)(''(*,,./016:*''''3;=<9'&)++02-,,<=;;;;;=,-=;;:0**&&&+/89::*6>?@A2896579:;@@>>>>==>;;;;;966585-,,,-339:87765533334599?>8,*)&('''*2<=@55>AAA??((((((968999==9841..*++++.5+(&&&&&&'&'(()((...///0.--)))007?><61/--)$$%%$$&'%%%%%&()+4;42240/((&&&&'497676--*)(*)(()+'&&&%%&%$%%&++.*)''&((+26678:;;;99:9:=?A@AA@>>=>>@>@?@???>==>=>>;<<;<;;:;9;:99;::<=>?A0///---35:8968;5446910012<=.;:?//;5444372))'&&''(()**454;:::33344>77BBA@=<<=<<<<===0//2??>BA=<22222@@A>0/0.-..,-(((((/11025>?96677/,,/.*-/<4,,3:<=+)))(((''(3--,,-1---734446>@@@AA555235233469;:>::8899:AB@(2?>==A;<944555A@?<88877799899A:98:;;;>66667>>=>3555348447,///211,*.20/038*(''&%'''(&&%$&%''++,/+*+++,,8678<;:6117774)''''+./35-,++,.1331.-,*''''')26888+)))*,..6750//-('''%%%"); 
    EXPECT_EQ(s[last]->name, "1b34a65d-b51b-4595-9132-bf9090b546d7");
    EXPECT_EQ(s[last]->seq.size(), 3478);
    EXPECT_EQ(s[last]->seq, "GTACATGCTTCGTTCAGTTACGTATTGCTGAACGTTGCAGAAGTGCCAATGCCGCAAAGCAAAAGAAGCGAGACTTACAAATAAATAAATATACAATTGCAAAAAGTAAATCGTTTACCCTAAATTATGCTGGCTAACTTACACGTTTGTATCACTTTTCGCAAATAATTCGTTTGATTAAATTAATTTGAGGCCTTTGCACGAATACAAATAATGGTAATAGTTACAATAACTAAATCACGTTTTTGGTTGAAATCAATTTAGGGTTCCCCATTTCCAACTTCCATATGTTCTCCTAAAAGATATTGATCTGGAACTCGCTGACGATCCCCTCAAGGAAGTTCTTCAGGCTGTGGTACGAGTGGCTGCGCCAGCCAAATGTTGTTGTTCACCTGCTCCAGCGCCAACTCGATGGCCGATTCCACGGCATGGAGTCCCAGTTTACGGCAGGTAGCGGCCAAGTCCAGAAGCTGGTGCTTATGGTAGTCCTTGTTTAATAGATGGTCAGCGATTTGATCATCTCGGACAGCGTGGAGAAGCCATCGCCATAGCTATGGTGCAATTGAACATAACTAAATTAATATACATTCAACCAATCACACAAAGCATCACTTACTATTCGGCAATCTCCTTTATGTTGCCCTGCAGAAAATCAAAGGCTATCTCATGACCAATGGCATTGGAGGCCACAGCACGGAAGGCCAAGGCGCCATCCTGTTTTAGTACTTACAACGATGTTGGATTGATGGTCATGTTGAGGTACCTACAAAGTTGTTGCACATCAGTCTTTGGTCTTTGATGGATCAAACTATTGTAGTTACTCACTTGGACAGCAGCCAGGGTTTGGTGGTGCAGCCTTGAGGTCGAGTATCTCCTCCTTCTCGGAAGCACTCGCGGTTGACTTGTACTGTTTGTAGGCGAAATACCATTCCGGTGACGAGCCCTCCGCCAAGGAGGTGCAGTAGATCACAGACTTGGGGTTTGGCTTAATGCTGTTGATTTATGATTGCATCGTTTTTAATAAGTTTTTGTATTGTATTTCAGTTACAAGCTTACGGATTGTTTTTGGGATCACGCATCCACTCGCGGAACTTCATCTGCGCCTTTTGGGTACAGCAGTCGTAGTTGAACTTGCAGGCAAAGTAGGCCACCAAGGCACGGTGCTTCAATTGCAAGTGGGACTCGTGTCCGGCTCATGCAGGCCATAATGATCAAAGGCAGGACGTACGATGAATTTCATGAAGGCCTGGTTAAACAAAATATATTATAAAACACTCTAAAAGTTACTAGGTTTACTGGGTTCCACTACCCTGAAATCTCATAGGCAGGCTCCCTCTTCCAGGTTGTAGATCAGATAGTTGAGACCAGGTTTGGCGGCAATCCACAGCAGCTCATCATCCACAGCATCGAACAGCTCCATGAGAGTCCAATCTAAAGGCAAAAGTATTTTATGTTAATAATTTCATTTTACTTGTCTTACTTCTCAAACTTACGGTATGTCGTAGGTAAGATATTCCGCTTGCGACAGATGCAGTGCATCATCCAGCAACTGGGCCCTTGTGATCTGGGCAATGTGCTAAAAGTTCTTCTTGAGCGCCAGCCAGGAGGTCATATCGTAGTTGACCCTATAGTAACCCTGCCAGTTGAGATTCAGATAGATCACGTTATCGCTGTTGCTGCTATGCGCAAAGACATTGCCCACGATGAGCTCCTCTTCGTCCTGCTTCTCATCGGTGGGTGGGTATGTTGTCGCCCTTGCGCAACTCATCCCGTCTCGAGTGATGGGTATAAACCAGGTGCTCTGATCCGCAGTGTTCTTGGGAGGCAGCAGATAGCGTTCCTGGCGCAGCACGAGATCAGCACCACGACGCTCCATTGACCACCGGATAACCGGGCTGTGTGATCCACGAGTCCATGATCTGCTTGACACTCAGATCCTTGGGCAGAGTACCCTGTTCGTGACCATGGCGCGTGAGCATGGCCCACAGATCATCCTTGTCCATGTTTCCATAGGCGAACTTCTTTAGAAGATCGCGAGTGGCCGACAAGGCTACATCACCCACGATCGAATTGAGCATGCGCAGCAAGATAGTGCCCTTTGAGTAGCTGATGGGATCGAAAATCCGCCTGACATCGTTGGTGGAGCGCACATCAAAGGGGAAATGGCATGCGAGGTGTTGTCCGCATCGTGCTCCATCGACTCCTTAAACTCCAGCATGGTCAGTGTCCGCTCTGGAACTCCGGATGGGCGCTCCAGTGCCTTGTAGCTCATGTAGCAGGCGAAGCCCTCCTTCAGCCAGAGATCATCCCACCACTTCAGGGTCACTAGATTGCCGAGCCACTGATGGGCCAACTCGTGTGCAATGATTCCGGCCACCACCTGCATGTGTTCCGATGAGGACGCCAGCTGCAGATCCTCGGGCACCAGTAGCGCCGGATCGCGGAACGTTATAGCGGGTCCCCCAGTTTTCCATGGCAGCGAATCCAAAGTCGGCACGGACACCGTCAATTTGGGCAGCTTGTTCTTAATACCGAAGAGTCCTCGTAGTAGGGCAAGAATTTCGCACCATCTTGTACGCATAGTGAGTCATACCCACAAACTGGAGTCGCGTCCAGATCTCCACTCGCGGCGTCAACCCACTGTCACAGCTGGCAAGCCGCGAATCCACCATGTTGGACACGATGAAAGCCACGGGTAAGTGGGCATCTTCGGCGTGGTCTCGAAATCGTCTCTTATGAAACCACGGCGGGAAAACGCTTGCCCGACTTGGGCATGTTGGAAAGGGCCATCTTGAACTGCATGGGTCTGGCTTGATGCTGATCGAGAAGTTAGCTTTCATGTCCCGGACGGTGAAGCAGGGAAAGGCGCGACAGGCATCGACGGGCGAGAACTAGTGCTTATCATCCATCTAAAAGTAGGGAACTTTAGAAGGGGAACTTTCGTGGAGATGGTTCTGGACTTACTCCGCTTCATTCTTGGTGTCCGGATTGGTGTAGCTGGTCTTGTAGATGCGCTGCAGTGTATCCGTTACCTGGCTGACGAAATCAGACTTAGCAGCACTCTCAGTTGAGTCTCCACCGCCAAAGTCTTGCTCAAATTGATCACGAACGTGGCATTATCCTCCCCGTAGTCGCTGTAGAAATCCAAGTGCTTGCTCCTCGCTGGCATTGCTGGCGCCATCCGCAAGGGCACGGATCACCCGGGCATTGGAGATGCTCACGTTGTGCACGTCGAGCACGATGGGCTCCCAGCTGGTCACCTTGGACACATCCCGTTCGATCTCGATGGTCAGGCTGCGTTGCTGCTAGATGTTGCCACACTTGGCTCAATCAAAGGCTGGAAGATATCATATAGTTGAGAAGGTATCATATAAATAGATTCAAATAGGGAAATGCTCTGCATTTGCAGGTGAAATGCAAATGTTGGCCAAAAACGCCAGGTCGCTGCCATAAAAAGTGCCAATCAATCAATCAATGA");
    EXPECT_EQ(s[last]->qual, "%%%&&+,.245?>>==;<<<<<<<<=<;;;;>@==>=<2(&%%&&&&()+7>===>?A<==<>DGKKCBB@>>>?@CBIEM.>A@:C@DFFCC????@@?<;<CA@9;<<>A<<<<=><('1<;<=>>>=<;:9::<>AACA;::;=8''''')*4569=/.....ECECA<999:?BBABB6BJCFFB<5443266789,,*-/289=;=0AEE@;;;;=B>??<;<<<B>>>;:767++++,7;0/76667>=?B75578&&'&&''+,6927?><<;;?@?A>>=<;===?=0//2<18;=??@???>///17<<>:::::>>=<<=<:<?<7++---25;?AB<999<CB;;;;;----/5@A?>=>>>1110''&):;77889>@=;9869:=4447??>?<<==<==<87789ABA?//323445211599=<=>>>>==<<88887444449::9:=40/.,--,-/013:>:>6550///255:44'&&&'&&(/,..-,,,***-/6=;A@A?>=::;;;===>?>=)))-8<<<10/)'((())1377666?@B=>==>?@54444?@@@=>>=>?>===>A@A?@@AAA>??=::;<;;===><?@@CB:(((((-0110677<<;?>=>@=<===BBBA?;>9:0/5:566<-,,02B?>>==@AA@??@>88889:::::>=<<<<===<::778:;<<>@7*)7==)1677*')***)))**.8944:931028>>?@@BCB>987/.2222==AF18B?>??>??>?@;::=?AF@@@@=>>?AHBA@=;?@A?>=<;;<=>@>33334?CC@A==*))))+/00011?>=877;=>@9896'''''(00*(((+1==B@<<=>>>ABA?=<<<;<<<89888;;<<>?AD@>>:::A*15568432223?@>>?>=;:;<<=:3302-,08:<<<***))++,7.--**+**+==>>>?><44446?9====?ABC@?@<;<;>ABABBB:9=======??AABCCA:879:;03>?>A>>=>>D@::9<<<777;=>>???=>>>???;:<<9<<<33--/6666:;><:;:::>=??ABAAA@?>>>?BJHE:92/)((&&'''(5:=@@AAABB?:)''''('&*58776.*('&()+((''())*,,@999989:;;;<::::9(''''>>==<=>>00000347<<=>??@>//,)()''(((554534421111126999544445::;;;>A?>??BBB@={=66777DCA>=<;;;>=???A><00(''*'4200('((,*)(''8../0/))(''((**+210000:<878<=?(''*--33666AB><:;;;===>?>=<;:::;=@@@>=<:;<=@>>;::6411<<@CB@@@???>>?A><<<=>>>>==?@??;))(,****>9653/48::B=?<>>?DBBC>BBDCEDCDFDB9768*/;<==>>===<>=<=@?>AA@AC>:8889:::,,+(('().00;<A>=;::;;<;::::<<<;)(((((((8773.--,'''&'**+58=???>>?000<=<<<<<=<==>5-23345?@@A<<99;<<=22222/'''()6644477>===<7621134=>>>>>?;;<<.,+***+,,,,0124.>@@????@?>+++++>;<===>>=>?@A>====@A>=<;<=<98888;>><8777.--.89***&%$$$$(88334'''()889:999<21111A@@><::2258833331335)(*988631--.@A?218==<99'&&&'*189222@A===99::<@B::85)(,'&&'***44445435556?@>882111234789980//0021114((((()(+0124---*))())*433566:43((((0337210357==>CCB@>=:9::::=<?100<?=>==;:;7//.////..13555;;==A>?====:665578431111416>=::;---&&%%'+1125@AA=@??=>;:66689:@BFC@>==<>??=<;::85:;;987'%$$$$$&%%+3967889:>?555=;<?=>B??<<<---,()()(((((698865677800//..-*))*+*+*+*+--))000237;===??@A@:9999?>;433--,+.()()+5@?A@@?@3----012225=<<95455889>?ABAA?@@A999899:?>>=>@E@D@?>.-,,2765556444755532//2*('&'''(.+++,67@@@;;97667;<@A=<;99;88===><:9:789:5445477567<===<<>>>@??@?+***+;>?;:::;>>@6-+('('(,4<<>>>>>>89993337////0@D??>=<;=A??@?>BBAABDDD=@??///07554334445))))*+**58=::96667:A:9989=<=<*''''*20//00-***)(((''''(-97511112=?:/.((('''&&,./---0022,,,//000,+++)()*),,&&'()+,,,,(((),66666>=5520/0/03-,155?@?>;::;:++++0-(+++,/79<AA5.(((((1/11113334A>>==<?A>@B@B@?==97888;99;<?=>;:9:;?.-)'((*;(((7338<<;>*)('''')=74339775558<9999:->?>=;====;54446567:/.('%%%&&+;:97:;<>@A877;;<;;:9888::<=<;<==99))))3890---/1-.++-...)((*()('')**++,,+/:@A@A?++3.543465++++67888@===:99974&&&&&&&'*+=<8843+++'(3'&&&&***++4532228;,****/22::;;6987A?><==>/.../@A@@@-,,,-777666'&'''--.89?CBCABA@???>?=:---/04<=>655---2.147:<><:99:9///.'&'.1>>>??@5443('''(,...324+&&&&.3458?A@===<=??A>????AA=5***/5:875546677>?>>=>>3332288:9;;****66***:::<=??==<<<<<=999:9/.../=>>@?>==;4/,-/((()*-./..15=?A+))))./0=>?=<<+++**019//:==A@9540-(''')+00+&''&&&()+++-)))))/.//0>;=10//0<==>@<1110,,/--6;<<>B;:60(+++++,347<<<87998;<<<==<=;<<>>ADEDGBCCB@>===>=822333<?@=<=>>@A@@<;;<<A@=<><<CBDCEDCCDBDB32222@A0//66877</////1855@22111::??@B>:::778*:51/)'&&%%%%)557;:?@?:854599<;=>@@?>?@@E?<::::9;?@=;;9:<C@@====:;:::>;;8877797780/...:<>>:0////110,)((()-./2<===<2222200598;<>>?B555=>;;8*'%%$");
}

TEST(BasicTests, Parse_PAF) {
    auto p = bioparser::Parser<align_reads::Overlap>::Create<bioparser::PafParser>(overlap_paf_path);
    auto o = p->Parse(-1);
    EXPECT_EQ(8413, o.size());
    uint32_t last = o.size() - 1;
    EXPECT_EQ(o[0]->q_name, "15e0219e-faac-4cd9-a7e9-a9f954ed117e");
    EXPECT_EQ(o[0]->q_len, 15386);
    EXPECT_EQ(o[0]->q_start, 35);
    EXPECT_EQ(o[0]->q_end, 697);
    EXPECT_EQ(o[0]->dir, '-');
    EXPECT_EQ(o[0]->t_name, "8cd586c0-abd6-4cda-8a2d-448bc362511a");
    EXPECT_EQ(o[0]->t_len, 67428);
    EXPECT_EQ(o[0]->t_start, 29);
    EXPECT_EQ(o[0]->t_end, 690);
    EXPECT_EQ(o[0]->num_match, 543);
    EXPECT_EQ(o[0]->overlap_len, 671);
    EXPECT_EQ(o[0]->mapq, 0);
    
    EXPECT_EQ(o[last]->q_name, "007eeb93-07f9-4722-bd23-4fc7d9f444de");
    EXPECT_EQ(o[last]->q_len, 2661);
    EXPECT_EQ(o[last]->q_start, 94);
    EXPECT_EQ(o[last]->q_end, 225);
    EXPECT_EQ(o[last]->dir, '+');
    EXPECT_EQ(o[last]->t_name, "1441aefe-5d70-42f0-b894-13605b9e9c48");
    EXPECT_EQ(o[last]->t_len, 1575);
    EXPECT_EQ(o[last]->t_start, 34);
    EXPECT_EQ(o[last]->t_end, 165);
    EXPECT_EQ(o[last]->num_match, 119);
    EXPECT_EQ(o[last]->overlap_len, 135);
    EXPECT_EQ(o[last]->mapq, 0);
    
    
    
}

